name: "Build"
on:
  workflow_dispatch:
  push:
    paths:
      - "**.nix"
      - "flake.lock"
      - ".github/workflows/ci.yaml"
  schedule:
    # Runs every day at 00:00 UTC
    - cron: "0 0 * * *"

jobs:
  build-config:
    strategy:
      matrix:
        include:
          - hostName: Magnus
            nixosCfgKey: magnus
            homeCfgKey: magnus
            os-label: ubuntu-latest
          - hostName: Akatosh
            nixosCfgKey: akatosh
            homeCfgKey: akatosh
            os-label: ubuntu-latest
      fail-fast: false

    name: Build ${{ matrix.hostName }}
    runs-on: ${{ matrix.os-label }}
    steps:
      - name: Free diskspace
        uses: easimon/maximize-build-space@master
        with:
          build-mount-path: /nix
          root-reserve-mb: 5120
          remove-dotnet: true
          remove-android: true
          remove-haskell: true

      - uses: actions/checkout@v4

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v30

      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1073741824
          purge: false

      - name: Build NixOS Configuration
        if: ${{ contains(toJSON(matrix), 'nixosCfgKey') && matrix.nixosCfgKey != '' }}
        run: nix build .#nixosConfigurations.${{ matrix.nixosCfgKey }}.config.system.build.toplevel

  check_flake:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: "experimental-features = nix-command flakes pipe-operators"

      - name: Check Flake
        run: nix flake check --keep-going

  update_flake_lock:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: "experimental-features = nix-command flakes"

      - name: Update flake.lock
        run: nix flake update

      - name: Commit & Push if Updated
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add flake.lock
            git commit -m "automatic chore: flake lock update"
            git push
          else
            echo "flake.lock is up to date. Nothing to commit."
